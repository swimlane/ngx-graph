(self.webpackChunkngx_graph=self.webpackChunkngx_graph||[]).push([[484],{"./projects/swimlane/ngx-graph/src/stories/demos/components/ngx-graph-org-tree/ngx-graph-org-tree.stories.ts":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{OrgChart:function(){return OrgChart},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return ngx_graph_org_tree_stories}});var Orientation,Alignment,tslib_es6=__webpack_require__("../../../.yarn/berry/cache/tslib-npm-2.8.1-66590b21b8-10c0.zip/node_modules/tslib/tslib.es6.mjs"),ngx_graph_org_tree_componentngResource=__webpack_require__("./projects/swimlane/ngx-graph/src/stories/demos/components/ngx-graph-org-tree/ngx-graph-org-tree.component.css?ngResource"),ngx_graph_org_tree_componentngResource_default=__webpack_require__.n(ngx_graph_org_tree_componentngResource),core=__webpack_require__("./.yarn/__virtual__/@angular-core-virtual-091278e3df/4/.yarn/berry/cache/@angular-core-npm-19.1.4-797f50e5e0-10c0.zip/node_modules/@angular/core/fesm2022/core.mjs"),common=__webpack_require__("./.yarn/__virtual__/@angular-common-virtual-0d62ddf07f/4/.yarn/berry/cache/@angular-common-npm-19.1.4-39587fe937-10c0.zip/node_modules/@angular/common/fesm2022/common.mjs"),public_api=__webpack_require__("./projects/swimlane/ngx-graph/src/public_api.ts"),dagre=__webpack_require__("../../../.yarn/berry/cache/dagre-npm-0.8.5-f3eb4059c5-10c0.zip/node_modules/dagre/index.js");!function(Orientation){Orientation.LEFT_TO_RIGHT="LR",Orientation.RIGHT_TO_LEFT="RL",Orientation.TOP_TO_BOTTOM="TB",Orientation.BOTTOM_TO_TOM="BT"}(Orientation||(Orientation={})),function(Alignment){Alignment.CENTER="C",Alignment.UP_LEFT="UL",Alignment.UP_RIGHT="UR",Alignment.DOWN_LEFT="DL",Alignment.DOWN_RIGHT="DR"}(Alignment||(Alignment={}));class DagreNodesOnlyLayout{defaultSettings=(()=>({orientation:Orientation.LEFT_TO_RIGHT,marginX:20,marginY:20,edgePadding:100,rankPadding:100,nodePadding:50,curveDistance:20,multigraph:!1,compound:!0}))();settings={};dagreGraph;dagreNodes;dagreEdges;run(graph){this.createDagreGraph(graph),dagre.layout(this.dagreGraph),graph.edgeLabels=this.dagreGraph._edgeLabels;for(const dagreNodeId in this.dagreGraph._nodes){const dagreNode=this.dagreGraph._nodes[dagreNodeId],node=graph.nodes.find((n=>n.id===dagreNode.id));node.position={x:dagreNode.x,y:dagreNode.y},node.dimension={width:dagreNode.width,height:dagreNode.height}}for(const edge of graph.edges)this.updateEdge(graph,edge);return graph}updateEdge(graph,edge){const sourceNode=graph.nodes.find((n=>n.id===edge.source)),targetNode=graph.nodes.find((n=>n.id===edge.target)),rankAxis="BT"===this.settings.orientation||"TB"===this.settings.orientation?"y":"x",orderAxis="y"===rankAxis?"x":"y",rankDimension="y"===rankAxis?"height":"width",dir=sourceNode.position[rankAxis]<=targetNode.position[rankAxis]?-1:1,startingPoint={[orderAxis]:sourceNode.position[orderAxis],[rankAxis]:sourceNode.position[rankAxis]-dir*(sourceNode.dimension[rankDimension]/2)},endingPoint={[orderAxis]:targetNode.position[orderAxis],[rankAxis]:targetNode.position[rankAxis]+dir*(targetNode.dimension[rankDimension]/2)};this.settings.curveDistance||this.defaultSettings.curveDistance;edge.points=[startingPoint,{[rankAxis]:(startingPoint[rankAxis]+endingPoint[rankAxis])/2,[orderAxis]:startingPoint[orderAxis]},{[orderAxis]:endingPoint[orderAxis],[rankAxis]:(startingPoint[rankAxis]+endingPoint[rankAxis])/2},endingPoint];const edgeLabelId=`${edge.source}${edge.target}\0`,matchingEdgeLabel=graph.edgeLabels[edgeLabelId];return matchingEdgeLabel&&(matchingEdgeLabel.points=edge.points),graph}createDagreGraph(graph){const settings=Object.assign({},this.defaultSettings,this.settings);this.dagreGraph=new dagre.graphlib.Graph({compound:settings.compound,multigraph:settings.multigraph}),this.dagreGraph.setGraph({rankdir:settings.orientation,marginx:settings.marginX,marginy:settings.marginY,edgesep:settings.edgePadding,ranksep:settings.rankPadding,nodesep:settings.nodePadding,align:settings.align,acyclicer:settings.acyclicer,ranker:settings.ranker,multigraph:settings.multigraph,compound:settings.compound}),this.dagreGraph.setDefaultEdgeLabel((()=>({}))),this.dagreNodes=graph.nodes.map((n=>{const node=Object.assign({},n);return node.width=n.dimension.width,node.height=n.dimension.height,node.x=n.position.x,node.y=n.position.y,node})),this.dagreEdges=graph.edges.map((l=>{let linkId=1;const newLink=Object.assign({},l);return newLink.id||(newLink.id=linkId,linkId++),newLink}));for(const node of this.dagreNodes)node.width||(node.width=20),node.height||(node.height=30),this.dagreGraph.setNode(node.id,node);for(const edge of this.dagreEdges)settings.multigraph?this.dagreGraph.setEdge(edge.source,edge.target,edge,edge.id):this.dagreGraph.setEdge(edge.source,edge.target);return this.dagreGraph}}var linear=__webpack_require__("../../../.yarn/berry/cache/d3-shape-npm-3.2.0-0beb7d8b02-10c0.zip/node_modules/d3-shape/src/curve/linear.js");let NgxGraphOrgTreeComponent=class NgxGraphOrgTreeComponent{employees=[];nodes=[];links=[];layoutSettings={orientation:"TB"};curve=(()=>linear.A)();layout=(()=>new DagreNodesOnlyLayout)();constructor(){this.employees=[{id:"1",name:"Employee 1",office:"Office 1",role:"Manager",backgroundColor:"#DC143C"},{id:"2",name:"Employee 2",office:"Office 2",role:"Engineer",backgroundColor:"#00FFFF",upperManagerId:"1"},{id:"3",name:"Employee 3",office:"Office 3",role:"Engineer",backgroundColor:"#00FFFF",upperManagerId:"1"},{id:"4",name:"Employee 4",office:"Office 4",role:"Engineer",backgroundColor:"#00FFFF",upperManagerId:"1"},{id:"5",name:"Employee 5",office:"Office 5",role:"Student",backgroundColor:"#8A2BE2",upperManagerId:"4"}]}ngOnInit(){for(const employee of this.employees){const node={id:employee.id,label:employee.name,data:{office:employee.office,role:employee.role,backgroundColor:employee.backgroundColor}};this.nodes.push(node)}for(const employee of this.employees){if(!employee.upperManagerId)continue;const edge={source:employee.upperManagerId,target:employee.id,label:"",data:{linkText:"Manager of"}};this.links.push(edge)}}getStyles(node){return{"background-color":node.data.backgroundColor}}static ctorParameters=()=>[];static propDecorators=(()=>({employees:[{type:core.Input}]}))()};NgxGraphOrgTreeComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"ngx-graph-org-tree",template:'<ngx-graph\n  [view]="[800, 500]"\n  [links]="links"\n  [nodes]="nodes"\n  [curve]="curve"\n  [layout]="layout"\n  [nodeWidth]="150"\n  [nodeHeight]="100"\n  [layoutSettings]="layoutSettings"\n  [enableZoom]="true"\n  [autoZoom]="true"\n>\n  <ng-template #defsTemplate>\n    <svg:marker id="arrow" viewBox="0 -5 10 10" refX="8" refY="0" markerWidth="4" markerHeight="4" orient="auto">\n      <svg:path d="M0,-5L10,0L0,5" class="arrow-head" />\n    </svg:marker>\n  </ng-template>\n\n  <ng-template #nodeTemplate let-node>\n    <svg:g class="node" xmlns="http://www.w3.org/2000/xhtml" width="150" height="100">\n      <svg:foreignObject width="150" height="100">\n        <xhtml:div class="cardContainer" xmlns="http://www.w3.org/1999/xhtml" [ngStyle]="getStyles(node)">\n          <label class="name">{{ node.label }}</label>\n          <label>{{ node.data.role }}</label>\n          <label>{{ node.data.office }}</label>\n        </xhtml:div>\n      </svg:foreignObject>\n    </svg:g>\n  </ng-template>\n\n  <ng-template #linkTemplate let-link>\n    <svg:g class="edge">\n      <svg:path class="line" stroke-width="2" marker-end="url(#arrow)"></svg:path>\n      <svg:text class="edge-label" text-anchor="middle">\n        <textPath\n          class="text-path"\n          [attr.href]="\'#\' + link.id"\n          [style.dominant-baseline]="link.dominantBaseline"\n          startOffset="50%"\n        >\n          {{ link.label }}\n        </textPath>\n      </svg:text>\n    </svg:g>\n    <svg:g\n      class="linkMidpoint"\n      *ngIf="link.midPoint"\n      [attr.transform]="\'translate(\' + link.midPoint.x + \',\' + link.midPoint.y + \')\'"\n    >\n      <ellipse rx="30" ry="10" />\n      <svg:text alignment-baseline="central">{{ link.data.linkText }}</svg:text>\n    </svg:g>\n  </ng-template>\n</ngx-graph>\n',imports:[public_api.ut,common.CommonModule],styles:[ngx_graph_org_tree_componentngResource_default()]})],NgxGraphOrgTreeComponent);var ngx_graph_org_tree_stories={title:"Example/NgxGraphOrgTreeComponent",component:NgxGraphOrgTreeComponent,tags:["autodocs"],parameters:{layout:"fullscreen"},args:{}};const OrgChart={args:{}},__namedExportsOrder=["OrgChart"];OrgChart.parameters={...OrgChart.parameters,docs:{...OrgChart.parameters?.docs,source:{originalSource:"{\n  args: {}\n}",...OrgChart.parameters?.docs?.source}}}},"./projects/swimlane/ngx-graph/src/stories/demos/components/ngx-graph-org-tree/ngx-graph-org-tree.component.css?ngResource":function(module,__unused_webpack_exports,__webpack_require__){var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./.yarn/__virtual__/css-loader-virtual-87ac4692a2/4/.yarn/berry/cache/css-loader-npm-7.1.2-7540f12884-10c0.zip/node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./.yarn/__virtual__/css-loader-virtual-87ac4692a2/4/.yarn/berry/cache/css-loader-npm-7.1.2-7540f12884-10c0.zip/node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,":host ::ng-deep {\n  display: block;\n  height: inherit;\n  width: inherit;\n\n  & .cardContainer {\n    height: 100;\n    width: 150;\n    display: block;\n\n    & .name {\n      font-size: 24px;\n    }\n\n    & label {\n      display: block;\n      text-align: center;\n      font-size: 20px;\n      margin-top: 4px;\n      margin-bottom: 8px;\n    }\n  }\n\n  & .linkMidpoint {\n    & ellipse {\n      fill: white;\n      stroke: black;\n      stroke-width: 1;\n    }\n\n    & text {\n      stroke: transparent;\n      fill: black;\n      text-anchor: middle;\n      font-size: 10px;\n    }\n  }\n}\n",""]),module.exports=___CSS_LOADER_EXPORT___.toString()}}]);