(self.webpackChunkngx_graph=self.webpackChunkngx_graph||[]).push([[934],{"./projects/swimlane/ngx-graph/src/stories/demos/components/ngx-graph-msagl/ngx-graph-msagl.component.css?ngResource":function(module,__unused_webpack_exports,__webpack_require__){var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,":host ::ng-deep {\n  display: block;\n  height: inherit;\n  width: inherit;\n}\n",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./projects/swimlane/ngx-graph/src/stories/demos/components/ngx-graph-msagl/ngx-graph-msagl.stories.ts":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{MSAGL:function(){return MSAGL},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return ngx_graph_msagl_stories}});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),ngx_graph_msagl_componentngResource=__webpack_require__("./projects/swimlane/ngx-graph/src/stories/demos/components/ngx-graph-msagl/ngx-graph-msagl.component.css?ngResource"),ngx_graph_msagl_componentngResource_default=__webpack_require__.n(ngx_graph_msagl_componentngResource),debug_node_DTOmNMDH=__webpack_require__("./node_modules/@angular/core/fesm2022/debug_node-DTOmNMDH.mjs"),public_api=__webpack_require__("./projects/swimlane/ngx-graph/src/public_api.ts"),dist=__webpack_require__("./node_modules/msagl-js/dist/index.js");class MSAGLLayout{run(graph){const g=this.createGeomGraph(graph),ss=new dist.cc;ss.layerDirection=dist.yn.LR,ss.LayerSeparation=150,ss.MinNodeHeight=100,ss.MinNodeWidth=100,g.layoutSettings=ss,(0,dist.Zq)(g),graph.edgeLabels=[];for(const node of g.shallowNodes()){const graphNode=graph.nodes.find(n=>n.id===node.id);graphNode.position={x:node.center.x,y:node.center.y},graphNode.dimension={width:graphNode.dimension.width,height:graphNode.dimension.height}}const geomEdges=Array.from(g.edges());for(const edge of graph.edges)this.updateGraphEdge(graph,edge,geomEdges);return graph}updateEdge(graph,edge){return graph}setNode(g,id,width,height,center=new dist.bR(0,0)){let node=g.graph.findNode(id);null==node&&g.graph.addNode(node=new dist.bP(id));const geomNode=new dist.DR(node);return geomNode.boundaryCurve=dist.KJ.createRectangle(width,height,center),geomNode}createGeomGraph(graph){const g=dist.t$.mk("graph",new dist.or(0,0));return graph.nodes.forEach(n=>{this.setNode(g,n.id,n.dimension.width,n.dimension.height)}),graph.edges.forEach(l=>{g.setEdge(l.source,l.target)}),g}updateGraphEdge(graph,edge,geomEdges){const geoEdge=geomEdges.find(e=>e.source.id===edge.source&&e.target.id===edge.target);edge.points=this.getPointsFromGeoEdge(geoEdge);const edgeLabelId=`${edge.source}${edge.target}\0`,matchingEdgeLabel=graph.edgeLabels[edgeLabelId];return matchingEdgeLabel?matchingEdgeLabel.points=edge.points:graph.edgeLabels[edgeLabelId]={points:edge.points},graph}getPointsFromGeoEdge(e){const result=[],points=(0,dist.WL)(e.curve,e.curve.end.sub(e.curve.start).length/20);for(let i=0;i<points.length;i++)result.push({y:points[i].y,x:points[i].x});return result.push({y:e.targetArrowhead.tipPosition.y,x:e.targetArrowhead.tipPosition.x}),result}}var basis=__webpack_require__("./node_modules/d3-shape/src/curve/basis.js");let NgxGraphMSAGLComponent=class NgxGraphMSAGLComponent{layout=new MSAGLLayout;curve=basis.Ay};NgxGraphMSAGLComponent=(0,tslib_es6.Cg)([(0,debug_node_DTOmNMDH.uAl)({selector:"ngx-graph-msagl",template:"<ngx-graph\n  [view]=\"[800, 500]\"\n  [links]=\"[\n    {\n      id: 'a',\n      source: 'a1',\n      target: 'a2'\n    },\n    {\n      id: 'b',\n      source: 'a2',\n      target: 'a3'\n    },\n    {\n      id: 'c',\n      source: 'a2',\n      target: 'a4'\n    },\n    {\n      id: 'd',\n      source: 'a1',\n      target: 'a5'\n    },\n    {\n      id: 'e',\n      source: 'a1',\n      target: 'a4'\n    },\n    {\n      id: 'f',\n      source: 'a1',\n      target: 'a3'\n    },\n    {\n      id: 'g',\n      source: 'a4',\n      target: 'a6'\n    },\n    {\n      id: 'h',\n      source: 'a1',\n      target: 'a6'\n    },\n    {\n      id: 'i',\n      source: 'a6',\n      target: 'a7'\n    }\n  ]\"\n  [nodes]=\"[\n    {\n      id: 'a1',\n      label: 'N1'\n    },\n    {\n      id: 'a2',\n      label: 'N2'\n    },\n    {\n      id: 'a3',\n      label: 'N3'\n    },\n    {\n      id: 'a4',\n      label: 'N4'\n    },\n    {\n      id: 'a5',\n      label: 'N5'\n    },\n    {\n      id: 'a6',\n      label: 'N6'\n    },\n    {\n      id: 'a7',\n      label: 'N7'\n    }\n  ]\"\n  [layout]=\"layout\"\n  [curve]=\"curve\"\n  [nodeWidth]=\"20\"\n  [nodeHeight]=\"20\"\n  [enableZoom]=\"true\"\n  [draggingEnabled]=\"false\"\n  [autoZoom]=\"true\"\n>\n  <ng-template #defsTemplate>\n    <svg:marker id=\"arrow\" viewBox=\"0 -5 10 10\" refX=\"8\" refY=\"0\" markerWidth=\"4\" markerHeight=\"4\" orient=\"auto\">\n      <svg:path d=\"M0,-5L10,0L0,5\" class=\"arrow-head\" />\n    </svg:marker>\n  </ng-template>\n\n  <ng-template #linkTemplate let-link>\n    <svg:g class=\"edge\">\n      <svg:path class=\"line\" stroke-width=\"2\" marker-end=\"url(#arrow)\"></svg:path>\n    </svg:g>\n  </ng-template>\n</ngx-graph>\n",imports:[public_api.ut],styles:[ngx_graph_msagl_componentngResource_default()]})],NgxGraphMSAGLComponent);var ngx_graph_msagl_stories={title:"Example/NgxGraphMSAGLComponent",component:NgxGraphMSAGLComponent,tags:["autodocs"],parameters:{layout:"fullscreen"},args:{}};const MSAGL={args:{}},__namedExportsOrder=["MSAGL"];MSAGL.parameters={...MSAGL.parameters,docs:{...MSAGL.parameters?.docs,source:{originalSource:"{\n  args: {}\n}",...MSAGL.parameters?.docs?.source}}}}}]);