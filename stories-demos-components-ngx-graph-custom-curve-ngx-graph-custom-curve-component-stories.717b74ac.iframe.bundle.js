"use strict";(self.webpackChunkngx_graph=self.webpackChunkngx_graph||[]).push([[418],{"./projects/swimlane/ngx-graph/src/stories/demos/components/ngx-graph-custom-curve/ngx-graph-custom-curve.component.stories.ts":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CustomCurve:function(){return CustomCurve},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return ngx_graph_custom_curve_component_stories}});var Orientation,Alignment,tslib_es6=__webpack_require__("../../../.yarn/berry/cache/tslib-npm-2.8.1-66590b21b8-10c0.zip/node_modules/tslib/tslib.es6.mjs"),core=__webpack_require__("./.yarn/__virtual__/@angular-core-virtual-091278e3df/4/.yarn/berry/cache/@angular-core-npm-19.1.4-797f50e5e0-10c0.zip/node_modules/@angular/core/fesm2022/core.mjs"),public_api=__webpack_require__("./projects/swimlane/ngx-graph/src/public_api.ts"),dagre=__webpack_require__("../../../.yarn/berry/cache/dagre-npm-0.8.5-f3eb4059c5-10c0.zip/node_modules/dagre/index.js");!function(Orientation){Orientation.LEFT_TO_RIGHT="LR",Orientation.RIGHT_TO_LEFT="RL",Orientation.TOP_TO_BOTTOM="TB",Orientation.BOTTOM_TO_TOM="BT"}(Orientation||(Orientation={})),function(Alignment){Alignment.CENTER="C",Alignment.UP_LEFT="UL",Alignment.UP_RIGHT="UR",Alignment.DOWN_LEFT="DL",Alignment.DOWN_RIGHT="DR"}(Alignment||(Alignment={}));class DagreNodesOnlyLayout{defaultSettings=(()=>({orientation:Orientation.LEFT_TO_RIGHT,marginX:20,marginY:20,edgePadding:100,rankPadding:100,nodePadding:50,curveDistance:20,multigraph:!1,compound:!0}))();settings={};dagreGraph;dagreNodes;dagreEdges;run(graph){this.createDagreGraph(graph),dagre.layout(this.dagreGraph),graph.edgeLabels=this.dagreGraph._edgeLabels;for(const dagreNodeId in this.dagreGraph._nodes){const dagreNode=this.dagreGraph._nodes[dagreNodeId],node=graph.nodes.find((n=>n.id===dagreNode.id));node.position={x:dagreNode.x,y:dagreNode.y},node.dimension={width:dagreNode.width,height:dagreNode.height}}for(const edge of graph.edges)this.updateEdge(graph,edge);return graph}updateEdge(graph,edge){const sourceNode=graph.nodes.find((n=>n.id===edge.source)),targetNode=graph.nodes.find((n=>n.id===edge.target)),rankAxis="BT"===this.settings.orientation||"TB"===this.settings.orientation?"y":"x",orderAxis="y"===rankAxis?"x":"y",rankDimension="y"===rankAxis?"height":"width",dir=sourceNode.position[rankAxis]<=targetNode.position[rankAxis]?-1:1,startingPoint={[orderAxis]:sourceNode.position[orderAxis],[rankAxis]:sourceNode.position[rankAxis]-dir*(sourceNode.dimension[rankDimension]/2)},endingPoint={[orderAxis]:targetNode.position[orderAxis],[rankAxis]:targetNode.position[rankAxis]+dir*(targetNode.dimension[rankDimension]/2)};this.settings.curveDistance||this.defaultSettings.curveDistance;edge.points=[startingPoint,endingPoint];const edgeLabelId=`${edge.source}${edge.target}\0`,matchingEdgeLabel=graph.edgeLabels[edgeLabelId];return matchingEdgeLabel&&(matchingEdgeLabel.points=edge.points),graph}createDagreGraph(graph){const settings=Object.assign({},this.defaultSettings,this.settings);this.dagreGraph=new dagre.graphlib.Graph({compound:settings.compound,multigraph:settings.multigraph}),this.dagreGraph.setGraph({rankdir:settings.orientation,marginx:settings.marginX,marginy:settings.marginY,edgesep:settings.edgePadding,ranksep:settings.rankPadding,nodesep:settings.nodePadding,align:settings.align,acyclicer:settings.acyclicer,ranker:settings.ranker,multigraph:settings.multigraph,compound:settings.compound}),this.dagreGraph.setDefaultEdgeLabel((()=>({}))),this.dagreNodes=graph.nodes.map((n=>{const node=Object.assign({},n);return node.width=n.dimension.width,node.height=n.dimension.height,node.x=n.position.x,node.y=n.position.y,node})),this.dagreEdges=graph.edges.map((l=>{let linkId=1;const newLink=Object.assign({},l);return newLink.id||(newLink.id="a"+linkId.toString(),linkId++),newLink}));for(const node of this.dagreNodes)node.width||(node.width=20),node.height||(node.height=30),this.dagreGraph.setNode(node.id,node);for(const edge of this.dagreEdges)settings.multigraph?this.dagreGraph.setEdge(edge.source,edge.target,edge,edge.id):this.dagreGraph.setEdge(edge.source,edge.target);return this.dagreGraph}}function Step(context,t){this._context=context,this._t=t}Step.prototype={areaStart(){this._line=0},areaEnd(){this._line=NaN},lineStart(){this._x=this._y=NaN,this._point=0},lineEnd(){0<this._t&&this._t<1&&2===this._point&&this._context.lineTo(this._x,this._y),(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line>=0&&(this._t=1-this._t,this._line=1-this._line)},point(x,y){switch(x=+x,y=+y,this._point){case 0:this._point=1,this._line?this._context.lineTo(x,y):this._context.moveTo(x,y);break;case 1:this._point=2;default:{let xN,yN,mYb,mYa;if(this._t<=0)xN=.25*Math.abs(x-this._x),yN=.25*Math.abs(y-this._y),mYb=this._y<y?this._y+yN:this._y-yN,mYa=this._y>y?y+yN:y-yN,this._context.quadraticCurveTo(this._x,this._y,this._x,mYb),this._context.lineTo(this._x,mYa),this._context.quadraticCurveTo(this._x,y,this._x+xN,y),this._context.lineTo(x-xN,y);else{const x1=this._x*(1-this._t)+x*this._t;xN=.25*Math.abs(x-x1),yN=.25*Math.abs(y-this._y),mYb=this._y<y?this._y+yN:this._y-yN,mYa=this._y>y?y+yN:y-yN,this._context.quadraticCurveTo(x1,this._y,x1,mYb),this._context.lineTo(x1,mYa),this._context.quadraticCurveTo(x1,y,x1+xN,y),this._context.lineTo(x-xN,y)}break}}this._x=x,this._y=y}};const stepRound=function(context){return new Step(context,.5)};let NgxGraphCustomCurve=class NgxGraphCustomCurve{curve=(()=>stepRound)();layout=(()=>new DagreNodesOnlyLayout)();links=[{id:"a",source:"first",target:"second",label:"is parent of"},{id:"b",source:"first",target:"third",label:"custom label"},{id:"c",source:"first",target:"fourth",label:"custom label"}];nodes=[{id:"first",label:"A"},{id:"second",label:"B"},{id:"third",label:"C"},{id:"fourth",label:"D"}]};NgxGraphCustomCurve=(0,tslib_es6.Cg)([(0,core.Component)({selector:"ngx-graph-custom-curve",template:'<ngx-graph\n  class="chart-container"\n  [view]="[800, 300]"\n  [links]="links"\n  [nodes]="nodes"\n  [layout]="layout"\n  [curve]="curve"\n>\n</ngx-graph>\n',imports:[public_api.ut]})],NgxGraphCustomCurve);var ngx_graph_custom_curve_component_stories={title:"Example/NgxGraphCustomCurveComponent",component:NgxGraphCustomCurve,tags:["autodocs"],parameters:{layout:"fullscreen"},args:{}};const CustomCurve={args:{}},__namedExportsOrder=["CustomCurve"];CustomCurve.parameters={...CustomCurve.parameters,docs:{...CustomCurve.parameters?.docs,source:{originalSource:"{\n  args: {}\n}",...CustomCurve.parameters?.docs?.source}}}}}]);